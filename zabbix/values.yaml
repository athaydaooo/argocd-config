# Custom values for zabbix.

zabbixImageTag: 6.4.15-alpine

postgresAccess:
  useUnifiedSecret: true
  unifiedSecretName: zabbixdb-pguser-zabbix
  unifiedSecretAutoCreate: true

zabbixServer:
  enabled: true
  replicaCount: 2
  haNodesAutoClean:
    enabled: true
    image:
      # Postgresql Docker image name: chose one of "postgres" or "timescale/timescaledb"
      repository: postgres
      #repository: timescale/timescaledb
      # Tag of Docker image of Postgresql server, choice "15" for postgres "2.11.1-pg15" for timescaledb
      # (Zabbix supports TimescaleDB 2.0.1-2.11.x. More info: https://www.zabbix.com/documentation/6.4/en/manual/installation/requirements)
      # Added support for PostgreSQL versions 15.x since Zabbix 6.0.10
      tag: 15
      #tag: 2.11.1-pg15
  service:
    type: NodePort
    port: 10051
    nodePort: 31051
  extraEnv: []
# Example of readinessProbe when zabbix-server has two or more replicas in HA mode
#  readinessProbe:
#    exec:
#      command:
#      - /bin/sh
#      - -c
#      - |-
#       test $(zabbix_server -R ha_status | awk /$ZBX_NODEADDRESS:10051/'{print $5}') = active
#    initialDelaySeconds: 60
#    periodSeconds: 10
#    timeoutSeconds: 5
#    successThreshold: 1
#    failureThreshold: 6

postgresql:
  enabled: true
  image:
    # Postgresql Docker image name: chose one of "postgres" or "timescale/timescaledb"
    repository: postgres
    #repository: timescale/timescaledb
    # Tag of Docker image of Postgresql server, choice "15" for postgres "2.10.3-pg15" for timescaledb
    # (Zabbix supports TimescaleDB 2.0.1-2.10.x. More info: https://www.zabbix.com/documentation/6.4/en/manual/installation/requirements)
    # Added support for PostgreSQL versions 15.x since Zabbix 6.0.10
    tag: 15
    #tag: 2.10.3-pg15
  max_connections: 100
  persistence:
    enabled: true
    existingClaimName: false
    storageSize: 5Gi # generate a PVC in default storage class with the given size for the DB

zabbixProxy:
  enabled: true
  replicaCount: 1
  ZBX_PROXYMODE: 0 # The variable allows to switch Zabbix proxy mode. By default, value is 0 - active proxy. Allowed values are 0 - active proxy and 1 - passive proxy.
  ZBX_HOSTNAME: zabbix-proxy # This variable is unique, case sensitive hostname.
  ZBX_SERVER_HOST: zabbix-zabbix-server
  ZBX_SERVER_PORT: 10051
  # ZBX_LOADMODULE: dummy1.so,dummy2.so # The variable is list of comma separated loadable Zabbix modules. It works with volume /var/lib/zabbix/modules.
  # ZBX_DEBUGLEVEL: 4 # The variable is used to specify debug level, from 0 to 5
  # ZBX_TIMEOUT: 4 # The variable is used to specify timeout for processing checks. By default, value is 4.
  # ZBX_JAVAGATEWAY_ENABLE: false # The variable enable communication with Zabbix Java Gateway to collect Java related checks. By default, value is false.
  ZBX_VMWARECACHESIZE: 128M
  service:
    type: NodePort
    port: 10051
    nodePort: 31053
  extraEnv: []

zabbixAgent:
  enabled: true
  ZBX_HOSTNAME: zabbix-agent
  ZBX_SERVER_HOST: 0.0.0.0/0
  ZBX_SERVER_PORT: 10051
  ZBX_PASSIVE_ALLOW: true # This variable is boolean (true or false) and enables or disables feature of passive checks. By default, value is true
  ZBX_ACTIVE_ALLOW: false # This variable is boolean (true or false) and enables or disables feature of active checks
  ZBX_DEBUGLEVEL: 3 # The variable is used to specify debug level, from 0 to 5
  ZBX_TIMEOUT: 4 # The variable is used to specify timeout for processing checks. By default, value is 4.
  ZBX_VMWARECACHESIZE: 128M
  service:
    type: ClusterIP
    port: 10050
  extraEnv: []

zabbixWeb:
  enabled: true
  ZBX_SERVER_HOST: zabbix-zabbix-server
  ZBX_SERVER_PORT: 10051
  service:
    type: ClusterIP
    port: 443
  extraEnv: []

ingress:
  enabled: true
  annotations:
    {
      nginx.ingress.kubernetes.io/ssl-redirect: "true",
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true",
      nginx.ingress.kubernetes.io/rewrite-target: /,
    }
  extraLabels: {}
  hosts:
    - host: teste.guaruja.sp.gov.br
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: guarujaspgovbr-tls
      hosts:
        - teste.guaruja.sp.gov.br
  # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
  # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
  ingressClassName: nginx
  # pathType is only for k8s >= 1.1=
  pathType: Prefix

karpenter:
  # Enables support provisioner of Karpenter. Reference: https://karpenter.sh/. Tested only using EKS cluster 1.23 in AWS with Karpenter 0.19.2.
  enabled: false
  clusterName: "CLUSTER_NAME"
  tag: "karpenter.sh/discovery/CLUSTER_NAME: CLUSTER_NAME"
  limits:
    resources:
      cpu: "20"
      memory: 100Gi
